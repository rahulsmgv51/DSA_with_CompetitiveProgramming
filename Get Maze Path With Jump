import java.util.*;
import java.io.*;

public class Get_Maze_Path_With_Jump {

	public static void main(String[] args) throws Exception{
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		int m = sc.nextInt();
		
		ArrayList<String> paths = getMazePathJump(1, 1, n ,m);
		for(int i=0; i<paths.size(); i++) {
			System.out.println(paths.get(i));
		}
	}

	private static ArrayList<String> getMazePathJump(int sr, int sc, int dr, int dc) {
		
		if(sc==dc && sr==dr) {
			ArrayList<String> bres = new ArrayList<>();
			bres.add("");
			return bres;
		}
		
		ArrayList<String> paths = new ArrayList<>();
		
		//horizontal Moves
		for(int ms = 1; ms<=dc-sc; ms++) {
			ArrayList<String> hpaths = getMazePathJump(sr, sc+ms, dr, dc);
			for(String hpath : hpaths) {
				paths.add("h" + ms + hpath);
			}
		}
		//Vertical Moves
		for(int ms = 1; ms<=dr-sr; ms++) {
			ArrayList<String> vpaths = getMazePathJump(sr+ms, sc, dr, dc);
			for(String vpath : vpaths) {
				paths.add("v" + ms + vpath);
			}
		}
		
		//Diagonal Moves
		for(int ms=1; ms<=dc-sc && ms<=dr-sr; ms++) {
			ArrayList<String> dpaths = getMazePathJump(sr+ms, sc+ms, dr, dc);
			for(String dpath : dpaths) {
				paths.add("d" + ms + dpath);
			}
		}
				
		return paths;
	}

}
